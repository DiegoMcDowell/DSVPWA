name: CI/CD con SAST y DAST para DSVPWA

on: [push, pull_request]

jobs:
  sast:
    runs-on: self-hosted

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Instalar dependencias Python
        run: pip install bandit pylint

      - name: Analizar con Bandit
        run: bandit -r dsvpwa -f html -o bandit_report.html || true

      - name: Analizar con Pylint
        run: pylint dsvpwa/*.py || true

      - name: Ejecutar SonarQube Scanner (local)
        run: sonar-scanner || true

      - name: Subir reporte Bandit
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.html

  dast:
    runs-on: self-hosted
    needs: sast

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Construir imagen Docker si no existe
        run: |
          if ! docker image inspect dsvpwa > /dev/null 2>&1; then
            echo "🛠 Construyendo imagen 'dsvpwa'..."
            docker build -t dsvpwa .
          else
            echo "✅ Imagen 'dsvpwa' ya existente"
          fi

      - name: Iniciar contenedor solo si el puerto 65413 está libre
        run: |
          if ! lsof -i TCP:65413 | grep LISTEN > /dev/null; then
            echo "🚀 Puerto libre, lanzando contenedor 'vulnerable-app'..."
            docker run -d --name vulnerable-app -p 127.0.0.1:65413:65413 dsvpwa
          else
            echo "✅ Puerto 65413 en uso, se asume contenedor existente"
          fi

      - name: Esperar que la app responda (HTTP 200)
        run: |
          echo "⌛ Esperando respuesta en http://127.0.0.1:65413"
          for i in {1..10}; do
            if curl -s -f http://127.0.0.1:65413 > /dev/null; then
              echo "✔ Aplicación en línea"
              exit 0
            fi
            echo "Esperando..."
            sleep 2
          done
          echo "❌ La aplicación no respondió a tiempo"
          docker logs vulnerable-app
          exit 1

      - name: Escaneo ZAP Baseline con Docker
        run: |
          docker run --rm -v "$(pwd)":/zap/wrk/:rw -t zaproxy/zap-stable \
            zap-baseline.py \
            -t http://127.0.0.1:65413 \
            -r zap_report.html || true

      - name: Verificar reporte ZAP
        run: |
          if [ -f zap_report.html ]; then
            echo "✔ Reporte ZAP generado correctamente"
          else
            echo "❌ Reporte ZAP NO generado"
            exit 1
          fi

      - name: Subir reporte ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html

      - name: Detener contenedor si fue iniciado por el workflow
        if: always()
        run: |
          if docker ps -q -f name=vulnerable-app > /dev/null; then
            docker rm -f vulnerable-app
          fi
