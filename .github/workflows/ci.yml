name: CI/CD con SAST y DAST para DSVPWA

on: [push, pull_request]

jobs:
  sast:
    runs-on: self-hosted

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Instalar dependencias Python
        run: pip install bandit pylint

      - name: Analizar con Bandit
        run: bandit -r dsvpwa -f html -o bandit_report.html || true

      - name: Analizar con Pylint
        run: pylint dsvpwa/*.py || true

      - name: Ejecutar SonarQube Scanner (local)
        run: sonar-scanner || true

      - name: Subir reporte Bandit
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.html

  dast:
    runs-on: self-hosted
    needs: sast

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Verificar imagen Docker
        run: |
          if ! docker image inspect dsvpwa > /dev/null 2>&1; then
            echo "üõ† Construyendo imagen 'dsvpwa'..."
            docker build -t dsvpwa .
          else
            echo "‚úÖ Imagen 'dsvpwa' ya existe."
          fi

      - name: Iniciar contenedor s√≥lo si puerto 65413 est√° libre
        run: |
          if lsof -i TCP:65413 | grep LISTEN > /dev/null; then
            echo "‚úÖ Puerto 65413 en uso, omitiendo docker run."
          else
            echo "üöÄ Puerto libre, lanzando contenedor 'vulnerable-app'..."
            docker run -d --rm --name vulnerable-app -p 127.0.0.1:65413:65413 dsvpwa
          fi

      - name: Comprobar que la app responde (HTTP 200)
        run: |
          echo "‚åõ Esperando respuesta en http://localhost:65413"
          for i in {1..10}; do
            if curl -s -f http://localhost:65413 >/dev/null; then
              echo "‚úî Aplicaci√≥n en l√≠nea"
              exit 0
            fi
            echo "Esperando..."
            sleep 2
          done
          echo "‚ùå La aplicaci√≥n no respondi√≥ a tiempo"
          exit 1

      - name: Escaneo ZAP Baseline (Docker)
        run: |
          docker run --rm -v "$(pwd)":/zap/wrk/:rw -t owasp/zap2docker-stable \
            zap-baseline.py \
            -t http://host.docker.internal:65413 \
            -r zap_report.html || true

      - name: Verificar reporte ZAP
        run: |
          if [ -f zap_report.html ]; then
            echo "‚úî Reporte ZAP generado correctamente"
          else
            echo "‚ùå Reporte ZAP NO generado"
            exit 1
          fi

      - name: Subir reporte ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html
