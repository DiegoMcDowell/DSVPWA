name: CI/CD con SAST y DAST para DSVPWA

on: [push, pull_request]

jobs:
  sast:
    name: Análisis Estático con herramientas locales
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Instalar dependencias Python
        run: |
          pip install bandit pylint

      - name: Ejecutar Bandit
        run: bandit -r dsvpwa -f html -o bandit_report.html || true

      - name: Ejecutar Pylint
        run: pylint dsvpwa/*.py || true

      - name: Ejecutar SonarQube Scanner local
        run: sonar-scanner || true

      - name: Subir reporte Bandit
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.html

  dast:
    name: Análisis Dinámico con ZAP local
    runs-on: self-hosted
    needs: sast
    steps:
      - uses: actions/checkout@v3

      - name: Limpiar contenedor previo
        run: |
          docker rm -f vulnerable-app || true

      - name: Construir imagen Docker de DSVPWA
        run: docker build -t dsvpwa .

      - name: Crear red docker para ZAP
        run: docker network create zapnet || true

      - name: Lanzar contenedor vulnerable en red zapnet
        run: |
          docker run -d --network zapnet --name vulnerable-app dsvpwa \
            python dsvpwa.py --host 0.0.0.0 --port 65413

      - name: Esperar que la aplicación levante
        run: |
          for i in $(seq 1 10); do
            if curl -s http://localhost:65413 >/dev/null; then
              echo "App lista"
              break
            fi
            echo "Esperando..."
            sleep 2
            if [ "$i" -eq 10 ]; then
              echo "❌ La aplicación no respondió a tiempo"
              exit 1
            fi
          done

      - name: Ejecutar ZAP desde Docker en la misma red
        run: |
          docker run --rm --network zapnet \
            -v "$(pwd)":/zap/wrk/:rw \
            owasp/zap2docker-stable \
            zap-baseline.py \
            -t http://vulnerable-app:65413 \
            -r zap_report.html || true

      - name: Validar existencia del reporte ZAP
        run: |
          if [ -f zap_report.html ]; then
            echo "✔ Reporte ZAP generado correctamente"
          else
            echo "❌ Reporte ZAP NO generado"
            exit 1
          fi

      - name: Subir reporte ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html

      - name: Detener contenedor vulnerable al final
        if: always()
        run: docker rm -f vulnerable-app || true
